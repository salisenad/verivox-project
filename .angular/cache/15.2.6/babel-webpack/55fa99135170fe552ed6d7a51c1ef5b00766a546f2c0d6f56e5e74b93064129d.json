{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class SortDirective {\n  constructor(el) {\n    this.el = el;\n    this.tariffs = [];\n    this.propertyChange = new EventEmitter();\n    this.directionChange = new EventEmitter();\n    this.sortDirection = 'asc';\n  }\n  onClick() {\n    if (this.tariffs && this.property) {\n      this.sort(this.property);\n      this.propertyChange.emit(this.property);\n      this.directionChange.emit(this.sortDirection);\n    }\n  }\n  sort(property) {\n    this.tariffs.sort((a, b) => {\n      if (a[property] === b[property]) {\n        return 0;\n      }\n      if (typeof a[property] === 'string' && typeof b[property] === 'string') {\n        if (this.sortDirection === 'asc') {\n          return a[property].localeCompare(b[property]);\n        } else {\n          return b[property].localeCompare(a[property]);\n        }\n      } else {\n        if (this.sortDirection === 'asc') {\n          return a[property] > b[property] ? 1 : -1;\n        } else {\n          return a[property] < b[property] ? 1 : -1;\n        }\n      }\n    });\n    this.toggleSortDirection();\n  }\n  toggleSortDirection() {\n    this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n  }\n}\nSortDirective.ɵfac = function SortDirective_Factory(t) {\n  return new (t || SortDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nSortDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: SortDirective,\n  selectors: [[\"\", \"appSort\", \"\"]],\n  hostBindings: function SortDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function SortDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    tariffs: \"tariffs\",\n    property: \"property\"\n  },\n  outputs: {\n    propertyChange: \"propertyChange\",\n    directionChange: \"directionChange\"\n  }\n});","map":{"version":3,"mappings":"AAAA,SAAgCA,YAAY,QAAqC,eAAe;;AAKhG,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,EAAc;IAAd,OAAE,GAAFA,EAAE;IANb,YAAO,GAAU,EAAE;IAElB,mBAAc,GAA+F,IAAIH,YAAY,EAAE;IAC/H,oBAAe,GAAiC,IAAIA,YAAY,EAAE;IACpE,kBAAa,GAAmB,KAAK;EAER;EAEdI,OAAO;IAC5B,IAAI,IAAI,CAACC,OAAO,IAAI,IAAI,CAACC,QAAQ,EAAE;MACjC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACD,QAAQ,CAAC;MACxB,IAAI,CAACE,cAAc,CAACC,IAAI,CAAC,IAAI,CAACH,QAAQ,CAAC;MACvC,IAAI,CAACI,eAAe,CAACD,IAAI,CAAC,IAAI,CAACE,aAAa,CAAC;;EAEjD;EAEQJ,IAAI,CAACD,QAAsF;IACjG,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,CAACK,CAAC,EAAEC,CAAC,KAAI;MACzB,IAAID,CAAC,CAACN,QAAQ,CAAC,KAAKO,CAAC,CAACP,QAAQ,CAAC,EAAE;QAC/B,OAAO,CAAC;;MAGV,IAAI,OAAOM,CAAC,CAACN,QAAQ,CAAC,KAAK,QAAQ,IAAI,OAAOO,CAAC,CAACP,QAAQ,CAAC,KAAK,QAAQ,EAAE;QACtE,IAAI,IAAI,CAACK,aAAa,KAAK,KAAK,EAAE;UAChC,OAAQC,CAAC,CAACN,QAAQ,CAAY,CAACQ,aAAa,CAACD,CAAC,CAACP,QAAQ,CAAW,CAAC;SACpE,MAAM;UACL,OAAQO,CAAC,CAACP,QAAQ,CAAY,CAACQ,aAAa,CAACF,CAAC,CAACN,QAAQ,CAAW,CAAC;;OAEtE,MAAM;QACL,IAAI,IAAI,CAACK,aAAa,KAAK,KAAK,EAAE;UAChC,OAAOC,CAAC,CAACN,QAAQ,CAAC,GAAGO,CAAC,CAACP,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC1C,MAAM;UACL,OAAOM,CAAC,CAACN,QAAQ,CAAC,GAAGO,CAAC,CAACP,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;;IAG/C,CAAC,CAAC;IAEF,IAAI,CAACS,mBAAmB,EAAE;EAC5B;EAEQA,mBAAmB;IACzB,IAAI,CAACJ,aAAa,GAAG,IAAI,CAACA,aAAa,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK;EACpE;;AA3CWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;IAAA;;eAAbC,aAAS;MAAA","names":["EventEmitter","SortDirective","constructor","el","onClick","tariffs","property","sort","propertyChange","emit","directionChange","sortDirection","a","b","localeCompare","toggleSortDirection","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["/Users/senadsali/Desktop/verivox-3/verivox-project/src/app/shared/directives/sort.directive.ts"],"sourcesContent":["import { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({\n  selector: '[appSort]'\n})\nexport class SortDirective {\n  @Input() tariffs: any[] = [];\n  @Input() property: 'id' | 'name' | 'price' | 'downloadSpeed' | 'uploadSpeed' | 'tariffBenefits' | undefined;\n  @Output() propertyChange: EventEmitter<'id' | 'name' | 'price' | 'downloadSpeed' | 'uploadSpeed' | 'tariffBenefits'> = new EventEmitter();\n  @Output() directionChange: EventEmitter<'asc' | 'desc'> = new EventEmitter();\n  private sortDirection: 'asc' | 'desc' = 'asc';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('click') onClick() {\n    if (this.tariffs && this.property) {\n      this.sort(this.property);\n      this.propertyChange.emit(this.property);\n      this.directionChange.emit(this.sortDirection);\n    }\n  }\n\n  private sort(property: 'id' | 'name' | 'price' | 'downloadSpeed' | 'uploadSpeed' | 'tariffBenefits') {\n    this.tariffs.sort((a, b) => {\n      if (a[property] === b[property]) {\n        return 0;\n      }\n\n      if (typeof a[property] === 'string' && typeof b[property] === 'string') {\n        if (this.sortDirection === 'asc') {\n          return (a[property] as string).localeCompare(b[property] as string);\n        } else {\n          return (b[property] as string).localeCompare(a[property] as string);\n        }\n      } else {\n        if (this.sortDirection === 'asc') {\n          return a[property] > b[property] ? 1 : -1;\n        } else {\n          return a[property] < b[property] ? 1 : -1;\n        }\n      }\n    });\n\n    this.toggleSortDirection();\n  }\n\n  private toggleSortDirection() {\n    this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}